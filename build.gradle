buildscript {
    ext.kotlin_version = '1.9.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.10'
    id 'com.palantir.git-version' version '3.0.0'
    id 'xyz.jpenilla.run-paper' version '2.1.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

shadowJar {
    minimize()
    relocate 'com.warrenstrange', 'net.experience.powered.staffprotect.com.warrenstrange'
    dependsOn("createProperties")
}

tasks {
    runServer {
        minecraftVersion("1.20.1")
    }
}

group = 'net.experience.powered'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "spigot-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    implementation("net.kyori:adventure-api:4.3.0")
    implementation("net.kyori:adventure-platform-bukkit:4.3.0")
    implementation("net.kyori:adventure-platform-bungeecord:4.3.0")
    implementation("net.kyori:adventure-text-serializer-legacy:4.13.1")
    implementation("net.kyori:adventure-text-serializer-plain:4.14.0")
    implementation("net.kyori:adventure-text-minimessage:4.13.1")
    implementation("com.zaxxer:HikariCP:5.0.1")
    implementation("com.google.zxing:javase:3.5.1")
    implementation(project(":API"))
    implementation("com.warrenstrange:googleauth:1.5.0")
    compileOnly("io.github.waterfallmc:waterfall-api:1.19-R0.1-SNAPSHOT")
    compileOnly("org.spigotmc:spigot-api:1.20-R0.1-SNAPSHOT")
    compileOnly("org.jetbrains:annotations:24.0.0")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
        maven {
            name = "spigot-repo"
            url = "https://hub.spigotmc.org/nexus/content/groups/public/"
        }
        maven {
            name = "papermc-repo"
            url = "https://repo.papermc.io/repository/maven-public/"
        }
    }

    dependencies {
        implementation("net.kyori:adventure-api:4.3.0")
        implementation("net.kyori:adventure-platform-bukkit:4.3.0")
        implementation("org.jetbrains:annotations:24.0.0")
        compileOnly("org.spigotmc:spigot-api:1.20-R0.1-SNAPSHOT")
        compileOnly("io.github.waterfallmc:waterfall-api:1.19-R0.1-SNAPSHOT")
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    Iterable<String> iterable = new Iterable<String>() {
        @Override
        Iterator<String> iterator() {
            return List.of("plugin.yml", "bungee.yml").iterator()
        }
    }
    filesMatching(iterable) {
        expand props
    }
}

tasks.register('createProperties') {
    doLast {
        def details = versionDetails()
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p['gitLastTag'] = details.lastTag
            p['gitCommitDistance'] = details.commitDistance.toString()
            p['gitHash'] = details.gitHash.toString()
            p['gitHashFull'] = details.gitHashFull.toString() // full 40-character Git commit hash
            p['gitBranchName'] = details.branchName // is null if the repository in detached HEAD mode
            p['gitIsCleanTag'] = details.isCleanTag.toString()
            p.store w, null
        }
        // copy needed, otherwise the bean VersionController can't load the file at startup when running complete-app tests.
        copy {
            from "$buildDir/resources/main/version.properties"
            into "bin/main/"
        }
    }
}
kotlin {
    jvmToolchain(17)
}